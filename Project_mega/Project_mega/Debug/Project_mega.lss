
Project_mega.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800200  000007aa  0000083e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800230  00800230  0000086e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000086e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000090c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f0c  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d45  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003f0  00000000  00000000  00002595  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  00002988  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000635  00000000  00000000  000029ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000a2  00000000  00000000  00003021  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  000030c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea ea       	ldi	r30, 0xAA	; 170
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 33       	cpi	r26, 0x30	; 48
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e3       	ldi	r26, 0x30	; 48
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 33       	cpi	r26, 0x36	; 54
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	1f d0       	rcall	.+62     	; 0x15e <main>
 120:	42 c3       	rjmp	.+1668   	; 0x7a6 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <USART_init>:

static void
USART_init(uint16_t ubrr)
{
	/* Set baud rate in the USART Baud Rate Registers (UBRR) */
	UBRR0H = (unsigned char) (ubrr >> 8);
 124:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
	UBRR0L = (unsigned char) ubrr;
 128:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
	
	/* Enable receiver and transmitter on RX0 and TX0 */
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);
 12c:	e1 ec       	ldi	r30, 0xC1	; 193
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	88 61       	ori	r24, 0x18	; 24
 134:	80 83       	st	Z, r24
	
	/* Set frame format: 8 bit data, 2 stop bit */
	UCSR0C |= (1 << USBS0) | (3 << UCSZ00);
 136:	e2 ec       	ldi	r30, 0xC2	; 194
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	8e 60       	ori	r24, 0x0E	; 14
 13e:	80 83       	st	Z, r24
 140:	08 95       	ret

00000142 <USART_Transmit>:

static void
USART_Transmit(unsigned char data, FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
 142:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 146:	95 ff       	sbrs	r25, 5
 148:	fc cf       	rjmp	.-8      	; 0x142 <USART_Transmit>
	{
		;
	}
	
	/* Puts the data into a buffer, then sends/transmits the data */
	UDR0 = data;
 14a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 14e:	08 95       	ret

00000150 <USART_Receive>:

static char
USART_Receive(FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
 150:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 154:	85 ff       	sbrs	r24, 5
 156:	fc cf       	rjmp	.-8      	; 0x150 <USART_Receive>
	{
		;
	}
	
	/* Get the received data from the buffer */
	return UDR0;
 158:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
}
 15c:	08 95       	ret

0000015e <main>:
FILE uart_output = FDEV_SETUP_STREAM(USART_Transmit, NULL, _FDEV_SETUP_WRITE);
FILE uart_input = FDEV_SETUP_STREAM(NULL, USART_Receive, _FDEV_SETUP_READ);

int
main(void)
{
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	cd b7       	in	r28, 0x3d	; 61
 164:	de b7       	in	r29, 0x3e	; 62
 166:	a8 97       	sbiw	r28, 0x28	; 40
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	f8 94       	cli
 16c:	de bf       	out	0x3e, r29	; 62
 16e:	0f be       	out	0x3f, r0	; 63
 170:	cd bf       	out	0x3d, r28	; 61
	/* set SS, MOSI and SCK as output, pins 53 (PB0), 51 (PB2) and 52 (PB1) */
	DDRB |= (1 << PB0) | (1 << PB1) | (1 << PB2); // SS as output
 172:	84 b1       	in	r24, 0x04	; 4
 174:	87 60       	ori	r24, 0x07	; 7
 176:	84 b9       	out	0x04, r24	; 4
	/* set SPI enable and master/slave select, making MEGA the master */
	SPCR |= (1 << 6) | (1 << 4);
 178:	8c b5       	in	r24, 0x2c	; 44
 17a:	80 65       	ori	r24, 0x50	; 80
 17c:	8c bd       	out	0x2c, r24	; 44
	/* set SPI clock rate to 1 MHz */
	SPCR |= (1 << 0);
 17e:	8c b5       	in	r24, 0x2c	; 44
 180:	81 60       	ori	r24, 0x01	; 1
 182:	8c bd       	out	0x2c, r24	; 44
	
	// initialize the UART with 9600 BAUD
	USART_init(MYUBRR);
 184:	87 e6       	ldi	r24, 0x67	; 103
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	cd df       	rcall	.-102    	; 0x124 <USART_init>
	
	// redirect the stdin and stdout to UART functions
	stdout = &uart_output;
 18a:	e0 e3       	ldi	r30, 0x30	; 48
 18c:	f2 e0       	ldi	r31, 0x02	; 2
 18e:	8e e0       	ldi	r24, 0x0E	; 14
 190:	92 e0       	ldi	r25, 0x02	; 2
 192:	93 83       	std	Z+3, r25	; 0x03
 194:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	92 e0       	ldi	r25, 0x02	; 2
 19a:	91 83       	std	Z+1, r25	; 0x01
 19c:	80 83       	st	Z, r24
	
	unsigned char spi_send_data[20] = "master to slave\n";
 19e:	81 e1       	ldi	r24, 0x11	; 17
 1a0:	ec e1       	ldi	r30, 0x1C	; 28
 1a2:	f2 e0       	ldi	r31, 0x02	; 2
 1a4:	de 01       	movw	r26, r28
 1a6:	11 96       	adiw	r26, 0x01	; 1
 1a8:	01 90       	ld	r0, Z+
 1aa:	0d 92       	st	X+, r0
 1ac:	8a 95       	dec	r24
 1ae:	e1 f7       	brne	.-8      	; 0x1a8 <main+0x4a>
 1b0:	fe 01       	movw	r30, r28
 1b2:	72 96       	adiw	r30, 0x12	; 18
 1b4:	83 e0       	ldi	r24, 0x03	; 3
 1b6:	df 01       	movw	r26, r30
 1b8:	1d 92       	st	X+, r1
 1ba:	8a 95       	dec	r24
 1bc:	e9 f7       	brne	.-6      	; 0x1b8 <main+0x5a>
	
	/* send message to slave and receive message from slave */
	while (1)
	{
		/* send byte to slave and receive a byte from slave */
		PORTB &= ~(1 << PB0); // SS LOW
 1be:	85 b1       	in	r24, 0x05	; 5
 1c0:	8e 7f       	andi	r24, 0xFE	; 254
 1c2:	85 b9       	out	0x05, r24	; 5
		
		for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++)
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	18 c0       	rjmp	.+48     	; 0x1f8 <main+0x9a>
		{
			
			SPDR = spi_send_data[spi_data_index]; // send byte using SPI data register
 1c8:	08 2e       	mov	r0, r24
 1ca:	00 0c       	add	r0, r0
 1cc:	99 0b       	sbc	r25, r25
 1ce:	e1 e0       	ldi	r30, 0x01	; 1
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	ec 0f       	add	r30, r28
 1d4:	fd 1f       	adc	r31, r29
 1d6:	e8 0f       	add	r30, r24
 1d8:	f9 1f       	adc	r31, r25
 1da:	30 81       	ld	r19, Z
 1dc:	3e bd       	out	0x2e, r19	; 46
			
			while(!(SPSR & (1 << SPIF)))
 1de:	0d b4       	in	r0, 0x2d	; 45
 1e0:	07 fe       	sbrs	r0, 7
 1e2:	fd cf       	rjmp	.-6      	; 0x1de <main+0x80>
			{
				/* wait until the transmission is complete */
				;
			}
			
			spi_receive_data[spi_data_index] = SPDR; // receive byte from the SPI data register
 1e4:	3e b5       	in	r19, 0x2e	; 46
 1e6:	e5 e1       	ldi	r30, 0x15	; 21
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	ec 0f       	add	r30, r28
 1ec:	fd 1f       	adc	r31, r29
 1ee:	e8 0f       	add	r30, r24
 1f0:	f9 1f       	adc	r31, r25
 1f2:	30 83       	st	Z, r19
	while (1)
	{
		/* send byte to slave and receive a byte from slave */
		PORTB &= ~(1 << PB0); // SS LOW
		
		for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++)
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	82 0f       	add	r24, r18
 1f8:	28 2f       	mov	r18, r24
 1fa:	84 31       	cpi	r24, 0x14	; 20
 1fc:	28 f3       	brcs	.-54     	; 0x1c8 <main+0x6a>
			}
			
			spi_receive_data[spi_data_index] = SPDR; // receive byte from the SPI data register
		}
		
		PORTB |= (1 << PB0); // SS HIGH
 1fe:	85 b1       	in	r24, 0x05	; 5
 200:	81 60       	ori	r24, 0x01	; 1
 202:	85 b9       	out	0x05, r24	; 5
		
		printf(spi_receive_data);
 204:	ce 01       	movw	r24, r28
 206:	45 96       	adiw	r24, 0x15	; 21
 208:	9f 93       	push	r25
 20a:	8f 93       	push	r24
 20c:	0c d0       	rcall	.+24     	; 0x226 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 20e:	bf ef       	ldi	r27, 0xFF	; 255
 210:	27 ea       	ldi	r18, 0xA7	; 167
 212:	81 e6       	ldi	r24, 0x61	; 97
 214:	b1 50       	subi	r27, 0x01	; 1
 216:	20 40       	sbci	r18, 0x00	; 0
 218:	80 40       	sbci	r24, 0x00	; 0
 21a:	e1 f7       	brne	.-8      	; 0x214 <main+0xb6>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <main+0xc0>
 21e:	00 00       	nop
 220:	0f 90       	pop	r0
 222:	0f 90       	pop	r0
 224:	cc cf       	rjmp	.-104    	; 0x1be <main+0x60>

00000226 <printf>:
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	cd b7       	in	r28, 0x3d	; 61
 22c:	de b7       	in	r29, 0x3e	; 62
 22e:	ae 01       	movw	r20, r28
 230:	4a 5f       	subi	r20, 0xFA	; 250
 232:	5f 4f       	sbci	r21, 0xFF	; 255
 234:	fa 01       	movw	r30, r20
 236:	61 91       	ld	r22, Z+
 238:	71 91       	ld	r23, Z+
 23a:	af 01       	movw	r20, r30
 23c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end+0x2>
 240:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <__data_end+0x3>
 244:	03 d0       	rcall	.+6      	; 0x24c <vfprintf>
 246:	df 91       	pop	r29
 248:	cf 91       	pop	r28
 24a:	08 95       	ret

0000024c <vfprintf>:
 24c:	2f 92       	push	r2
 24e:	3f 92       	push	r3
 250:	4f 92       	push	r4
 252:	5f 92       	push	r5
 254:	6f 92       	push	r6
 256:	7f 92       	push	r7
 258:	8f 92       	push	r8
 25a:	9f 92       	push	r9
 25c:	af 92       	push	r10
 25e:	bf 92       	push	r11
 260:	cf 92       	push	r12
 262:	df 92       	push	r13
 264:	ef 92       	push	r14
 266:	ff 92       	push	r15
 268:	0f 93       	push	r16
 26a:	1f 93       	push	r17
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	cd b7       	in	r28, 0x3d	; 61
 272:	de b7       	in	r29, 0x3e	; 62
 274:	2b 97       	sbiw	r28, 0x0b	; 11
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	f8 94       	cli
 27a:	de bf       	out	0x3e, r29	; 62
 27c:	0f be       	out	0x3f, r0	; 63
 27e:	cd bf       	out	0x3d, r28	; 61
 280:	6c 01       	movw	r12, r24
 282:	7b 01       	movw	r14, r22
 284:	8a 01       	movw	r16, r20
 286:	fc 01       	movw	r30, r24
 288:	17 82       	std	Z+7, r1	; 0x07
 28a:	16 82       	std	Z+6, r1	; 0x06
 28c:	83 81       	ldd	r24, Z+3	; 0x03
 28e:	81 ff       	sbrs	r24, 1
 290:	bf c1       	rjmp	.+894    	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 292:	ce 01       	movw	r24, r28
 294:	01 96       	adiw	r24, 0x01	; 1
 296:	3c 01       	movw	r6, r24
 298:	f6 01       	movw	r30, r12
 29a:	93 81       	ldd	r25, Z+3	; 0x03
 29c:	f7 01       	movw	r30, r14
 29e:	93 fd       	sbrc	r25, 3
 2a0:	85 91       	lpm	r24, Z+
 2a2:	93 ff       	sbrs	r25, 3
 2a4:	81 91       	ld	r24, Z+
 2a6:	7f 01       	movw	r14, r30
 2a8:	88 23       	and	r24, r24
 2aa:	09 f4       	brne	.+2      	; 0x2ae <vfprintf+0x62>
 2ac:	ad c1       	rjmp	.+858    	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 2ae:	85 32       	cpi	r24, 0x25	; 37
 2b0:	39 f4       	brne	.+14     	; 0x2c0 <vfprintf+0x74>
 2b2:	93 fd       	sbrc	r25, 3
 2b4:	85 91       	lpm	r24, Z+
 2b6:	93 ff       	sbrs	r25, 3
 2b8:	81 91       	ld	r24, Z+
 2ba:	7f 01       	movw	r14, r30
 2bc:	85 32       	cpi	r24, 0x25	; 37
 2be:	21 f4       	brne	.+8      	; 0x2c8 <vfprintf+0x7c>
 2c0:	b6 01       	movw	r22, r12
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	d6 d1       	rcall	.+940    	; 0x672 <fputc>
 2c6:	e8 cf       	rjmp	.-48     	; 0x298 <vfprintf+0x4c>
 2c8:	91 2c       	mov	r9, r1
 2ca:	21 2c       	mov	r2, r1
 2cc:	31 2c       	mov	r3, r1
 2ce:	ff e1       	ldi	r31, 0x1F	; 31
 2d0:	f3 15       	cp	r31, r3
 2d2:	d8 f0       	brcs	.+54     	; 0x30a <vfprintf+0xbe>
 2d4:	8b 32       	cpi	r24, 0x2B	; 43
 2d6:	79 f0       	breq	.+30     	; 0x2f6 <vfprintf+0xaa>
 2d8:	38 f4       	brcc	.+14     	; 0x2e8 <vfprintf+0x9c>
 2da:	80 32       	cpi	r24, 0x20	; 32
 2dc:	79 f0       	breq	.+30     	; 0x2fc <vfprintf+0xb0>
 2de:	83 32       	cpi	r24, 0x23	; 35
 2e0:	a1 f4       	brne	.+40     	; 0x30a <vfprintf+0xbe>
 2e2:	23 2d       	mov	r18, r3
 2e4:	20 61       	ori	r18, 0x10	; 16
 2e6:	1d c0       	rjmp	.+58     	; 0x322 <vfprintf+0xd6>
 2e8:	8d 32       	cpi	r24, 0x2D	; 45
 2ea:	61 f0       	breq	.+24     	; 0x304 <vfprintf+0xb8>
 2ec:	80 33       	cpi	r24, 0x30	; 48
 2ee:	69 f4       	brne	.+26     	; 0x30a <vfprintf+0xbe>
 2f0:	23 2d       	mov	r18, r3
 2f2:	21 60       	ori	r18, 0x01	; 1
 2f4:	16 c0       	rjmp	.+44     	; 0x322 <vfprintf+0xd6>
 2f6:	83 2d       	mov	r24, r3
 2f8:	82 60       	ori	r24, 0x02	; 2
 2fa:	38 2e       	mov	r3, r24
 2fc:	e3 2d       	mov	r30, r3
 2fe:	e4 60       	ori	r30, 0x04	; 4
 300:	3e 2e       	mov	r3, r30
 302:	2a c0       	rjmp	.+84     	; 0x358 <vfprintf+0x10c>
 304:	f3 2d       	mov	r31, r3
 306:	f8 60       	ori	r31, 0x08	; 8
 308:	1d c0       	rjmp	.+58     	; 0x344 <vfprintf+0xf8>
 30a:	37 fc       	sbrc	r3, 7
 30c:	2d c0       	rjmp	.+90     	; 0x368 <vfprintf+0x11c>
 30e:	20 ed       	ldi	r18, 0xD0	; 208
 310:	28 0f       	add	r18, r24
 312:	2a 30       	cpi	r18, 0x0A	; 10
 314:	40 f0       	brcs	.+16     	; 0x326 <vfprintf+0xda>
 316:	8e 32       	cpi	r24, 0x2E	; 46
 318:	b9 f4       	brne	.+46     	; 0x348 <vfprintf+0xfc>
 31a:	36 fc       	sbrc	r3, 6
 31c:	75 c1       	rjmp	.+746    	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 31e:	23 2d       	mov	r18, r3
 320:	20 64       	ori	r18, 0x40	; 64
 322:	32 2e       	mov	r3, r18
 324:	19 c0       	rjmp	.+50     	; 0x358 <vfprintf+0x10c>
 326:	36 fe       	sbrs	r3, 6
 328:	06 c0       	rjmp	.+12     	; 0x336 <vfprintf+0xea>
 32a:	8a e0       	ldi	r24, 0x0A	; 10
 32c:	98 9e       	mul	r9, r24
 32e:	20 0d       	add	r18, r0
 330:	11 24       	eor	r1, r1
 332:	92 2e       	mov	r9, r18
 334:	11 c0       	rjmp	.+34     	; 0x358 <vfprintf+0x10c>
 336:	ea e0       	ldi	r30, 0x0A	; 10
 338:	2e 9e       	mul	r2, r30
 33a:	20 0d       	add	r18, r0
 33c:	11 24       	eor	r1, r1
 33e:	22 2e       	mov	r2, r18
 340:	f3 2d       	mov	r31, r3
 342:	f0 62       	ori	r31, 0x20	; 32
 344:	3f 2e       	mov	r3, r31
 346:	08 c0       	rjmp	.+16     	; 0x358 <vfprintf+0x10c>
 348:	8c 36       	cpi	r24, 0x6C	; 108
 34a:	21 f4       	brne	.+8      	; 0x354 <vfprintf+0x108>
 34c:	83 2d       	mov	r24, r3
 34e:	80 68       	ori	r24, 0x80	; 128
 350:	38 2e       	mov	r3, r24
 352:	02 c0       	rjmp	.+4      	; 0x358 <vfprintf+0x10c>
 354:	88 36       	cpi	r24, 0x68	; 104
 356:	41 f4       	brne	.+16     	; 0x368 <vfprintf+0x11c>
 358:	f7 01       	movw	r30, r14
 35a:	93 fd       	sbrc	r25, 3
 35c:	85 91       	lpm	r24, Z+
 35e:	93 ff       	sbrs	r25, 3
 360:	81 91       	ld	r24, Z+
 362:	7f 01       	movw	r14, r30
 364:	81 11       	cpse	r24, r1
 366:	b3 cf       	rjmp	.-154    	; 0x2ce <vfprintf+0x82>
 368:	98 2f       	mov	r25, r24
 36a:	9f 7d       	andi	r25, 0xDF	; 223
 36c:	95 54       	subi	r25, 0x45	; 69
 36e:	93 30       	cpi	r25, 0x03	; 3
 370:	28 f4       	brcc	.+10     	; 0x37c <vfprintf+0x130>
 372:	0c 5f       	subi	r16, 0xFC	; 252
 374:	1f 4f       	sbci	r17, 0xFF	; 255
 376:	9f e3       	ldi	r25, 0x3F	; 63
 378:	99 83       	std	Y+1, r25	; 0x01
 37a:	0d c0       	rjmp	.+26     	; 0x396 <vfprintf+0x14a>
 37c:	83 36       	cpi	r24, 0x63	; 99
 37e:	31 f0       	breq	.+12     	; 0x38c <vfprintf+0x140>
 380:	83 37       	cpi	r24, 0x73	; 115
 382:	71 f0       	breq	.+28     	; 0x3a0 <vfprintf+0x154>
 384:	83 35       	cpi	r24, 0x53	; 83
 386:	09 f0       	breq	.+2      	; 0x38a <vfprintf+0x13e>
 388:	55 c0       	rjmp	.+170    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 38a:	20 c0       	rjmp	.+64     	; 0x3cc <vfprintf+0x180>
 38c:	f8 01       	movw	r30, r16
 38e:	80 81       	ld	r24, Z
 390:	89 83       	std	Y+1, r24	; 0x01
 392:	0e 5f       	subi	r16, 0xFE	; 254
 394:	1f 4f       	sbci	r17, 0xFF	; 255
 396:	88 24       	eor	r8, r8
 398:	83 94       	inc	r8
 39a:	91 2c       	mov	r9, r1
 39c:	53 01       	movw	r10, r6
 39e:	12 c0       	rjmp	.+36     	; 0x3c4 <vfprintf+0x178>
 3a0:	28 01       	movw	r4, r16
 3a2:	f2 e0       	ldi	r31, 0x02	; 2
 3a4:	4f 0e       	add	r4, r31
 3a6:	51 1c       	adc	r5, r1
 3a8:	f8 01       	movw	r30, r16
 3aa:	a0 80       	ld	r10, Z
 3ac:	b1 80       	ldd	r11, Z+1	; 0x01
 3ae:	36 fe       	sbrs	r3, 6
 3b0:	03 c0       	rjmp	.+6      	; 0x3b8 <vfprintf+0x16c>
 3b2:	69 2d       	mov	r22, r9
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <vfprintf+0x170>
 3b8:	6f ef       	ldi	r22, 0xFF	; 255
 3ba:	7f ef       	ldi	r23, 0xFF	; 255
 3bc:	c5 01       	movw	r24, r10
 3be:	4e d1       	rcall	.+668    	; 0x65c <strnlen>
 3c0:	4c 01       	movw	r8, r24
 3c2:	82 01       	movw	r16, r4
 3c4:	f3 2d       	mov	r31, r3
 3c6:	ff 77       	andi	r31, 0x7F	; 127
 3c8:	3f 2e       	mov	r3, r31
 3ca:	15 c0       	rjmp	.+42     	; 0x3f6 <vfprintf+0x1aa>
 3cc:	28 01       	movw	r4, r16
 3ce:	22 e0       	ldi	r18, 0x02	; 2
 3d0:	42 0e       	add	r4, r18
 3d2:	51 1c       	adc	r5, r1
 3d4:	f8 01       	movw	r30, r16
 3d6:	a0 80       	ld	r10, Z
 3d8:	b1 80       	ldd	r11, Z+1	; 0x01
 3da:	36 fe       	sbrs	r3, 6
 3dc:	03 c0       	rjmp	.+6      	; 0x3e4 <vfprintf+0x198>
 3de:	69 2d       	mov	r22, r9
 3e0:	70 e0       	ldi	r23, 0x00	; 0
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <vfprintf+0x19c>
 3e4:	6f ef       	ldi	r22, 0xFF	; 255
 3e6:	7f ef       	ldi	r23, 0xFF	; 255
 3e8:	c5 01       	movw	r24, r10
 3ea:	2d d1       	rcall	.+602    	; 0x646 <strnlen_P>
 3ec:	4c 01       	movw	r8, r24
 3ee:	f3 2d       	mov	r31, r3
 3f0:	f0 68       	ori	r31, 0x80	; 128
 3f2:	3f 2e       	mov	r3, r31
 3f4:	82 01       	movw	r16, r4
 3f6:	33 fc       	sbrc	r3, 3
 3f8:	19 c0       	rjmp	.+50     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3fa:	82 2d       	mov	r24, r2
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	88 16       	cp	r8, r24
 400:	99 06       	cpc	r9, r25
 402:	a0 f4       	brcc	.+40     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 404:	b6 01       	movw	r22, r12
 406:	80 e2       	ldi	r24, 0x20	; 32
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	33 d1       	rcall	.+614    	; 0x672 <fputc>
 40c:	2a 94       	dec	r2
 40e:	f5 cf       	rjmp	.-22     	; 0x3fa <vfprintf+0x1ae>
 410:	f5 01       	movw	r30, r10
 412:	37 fc       	sbrc	r3, 7
 414:	85 91       	lpm	r24, Z+
 416:	37 fe       	sbrs	r3, 7
 418:	81 91       	ld	r24, Z+
 41a:	5f 01       	movw	r10, r30
 41c:	b6 01       	movw	r22, r12
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	28 d1       	rcall	.+592    	; 0x672 <fputc>
 422:	21 10       	cpse	r2, r1
 424:	2a 94       	dec	r2
 426:	21 e0       	ldi	r18, 0x01	; 1
 428:	82 1a       	sub	r8, r18
 42a:	91 08       	sbc	r9, r1
 42c:	81 14       	cp	r8, r1
 42e:	91 04       	cpc	r9, r1
 430:	79 f7       	brne	.-34     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 432:	e1 c0       	rjmp	.+450    	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 434:	84 36       	cpi	r24, 0x64	; 100
 436:	11 f0       	breq	.+4      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 438:	89 36       	cpi	r24, 0x69	; 105
 43a:	39 f5       	brne	.+78     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 43c:	f8 01       	movw	r30, r16
 43e:	37 fe       	sbrs	r3, 7
 440:	07 c0       	rjmp	.+14     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 442:	60 81       	ld	r22, Z
 444:	71 81       	ldd	r23, Z+1	; 0x01
 446:	82 81       	ldd	r24, Z+2	; 0x02
 448:	93 81       	ldd	r25, Z+3	; 0x03
 44a:	0c 5f       	subi	r16, 0xFC	; 252
 44c:	1f 4f       	sbci	r17, 0xFF	; 255
 44e:	08 c0       	rjmp	.+16     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 450:	60 81       	ld	r22, Z
 452:	71 81       	ldd	r23, Z+1	; 0x01
 454:	07 2e       	mov	r0, r23
 456:	00 0c       	add	r0, r0
 458:	88 0b       	sbc	r24, r24
 45a:	99 0b       	sbc	r25, r25
 45c:	0e 5f       	subi	r16, 0xFE	; 254
 45e:	1f 4f       	sbci	r17, 0xFF	; 255
 460:	f3 2d       	mov	r31, r3
 462:	ff 76       	andi	r31, 0x6F	; 111
 464:	3f 2e       	mov	r3, r31
 466:	97 ff       	sbrs	r25, 7
 468:	09 c0       	rjmp	.+18     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 46a:	90 95       	com	r25
 46c:	80 95       	com	r24
 46e:	70 95       	com	r23
 470:	61 95       	neg	r22
 472:	7f 4f       	sbci	r23, 0xFF	; 255
 474:	8f 4f       	sbci	r24, 0xFF	; 255
 476:	9f 4f       	sbci	r25, 0xFF	; 255
 478:	f0 68       	ori	r31, 0x80	; 128
 47a:	3f 2e       	mov	r3, r31
 47c:	2a e0       	ldi	r18, 0x0A	; 10
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	a3 01       	movw	r20, r6
 482:	33 d1       	rcall	.+614    	; 0x6ea <__ultoa_invert>
 484:	88 2e       	mov	r8, r24
 486:	86 18       	sub	r8, r6
 488:	44 c0       	rjmp	.+136    	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 48a:	85 37       	cpi	r24, 0x75	; 117
 48c:	31 f4       	brne	.+12     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 48e:	23 2d       	mov	r18, r3
 490:	2f 7e       	andi	r18, 0xEF	; 239
 492:	b2 2e       	mov	r11, r18
 494:	2a e0       	ldi	r18, 0x0A	; 10
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	25 c0       	rjmp	.+74     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 49a:	93 2d       	mov	r25, r3
 49c:	99 7f       	andi	r25, 0xF9	; 249
 49e:	b9 2e       	mov	r11, r25
 4a0:	8f 36       	cpi	r24, 0x6F	; 111
 4a2:	c1 f0       	breq	.+48     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4a4:	18 f4       	brcc	.+6      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a6:	88 35       	cpi	r24, 0x58	; 88
 4a8:	79 f0       	breq	.+30     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4aa:	ae c0       	rjmp	.+348    	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 4ac:	80 37       	cpi	r24, 0x70	; 112
 4ae:	19 f0       	breq	.+6      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b0:	88 37       	cpi	r24, 0x78	; 120
 4b2:	21 f0       	breq	.+8      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b4:	a9 c0       	rjmp	.+338    	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 4b6:	e9 2f       	mov	r30, r25
 4b8:	e0 61       	ori	r30, 0x10	; 16
 4ba:	be 2e       	mov	r11, r30
 4bc:	b4 fe       	sbrs	r11, 4
 4be:	0d c0       	rjmp	.+26     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4c0:	fb 2d       	mov	r31, r11
 4c2:	f4 60       	ori	r31, 0x04	; 4
 4c4:	bf 2e       	mov	r11, r31
 4c6:	09 c0       	rjmp	.+18     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4c8:	34 fe       	sbrs	r3, 4
 4ca:	0a c0       	rjmp	.+20     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4cc:	29 2f       	mov	r18, r25
 4ce:	26 60       	ori	r18, 0x06	; 6
 4d0:	b2 2e       	mov	r11, r18
 4d2:	06 c0       	rjmp	.+12     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d4:	28 e0       	ldi	r18, 0x08	; 8
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	05 c0       	rjmp	.+10     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4da:	20 e1       	ldi	r18, 0x10	; 16
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	02 c0       	rjmp	.+4      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4e0:	20 e1       	ldi	r18, 0x10	; 16
 4e2:	32 e0       	ldi	r19, 0x02	; 2
 4e4:	f8 01       	movw	r30, r16
 4e6:	b7 fe       	sbrs	r11, 7
 4e8:	07 c0       	rjmp	.+14     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4ea:	60 81       	ld	r22, Z
 4ec:	71 81       	ldd	r23, Z+1	; 0x01
 4ee:	82 81       	ldd	r24, Z+2	; 0x02
 4f0:	93 81       	ldd	r25, Z+3	; 0x03
 4f2:	0c 5f       	subi	r16, 0xFC	; 252
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	06 c0       	rjmp	.+12     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4f8:	60 81       	ld	r22, Z
 4fa:	71 81       	ldd	r23, Z+1	; 0x01
 4fc:	80 e0       	ldi	r24, 0x00	; 0
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	0e 5f       	subi	r16, 0xFE	; 254
 502:	1f 4f       	sbci	r17, 0xFF	; 255
 504:	a3 01       	movw	r20, r6
 506:	f1 d0       	rcall	.+482    	; 0x6ea <__ultoa_invert>
 508:	88 2e       	mov	r8, r24
 50a:	86 18       	sub	r8, r6
 50c:	fb 2d       	mov	r31, r11
 50e:	ff 77       	andi	r31, 0x7F	; 127
 510:	3f 2e       	mov	r3, r31
 512:	36 fe       	sbrs	r3, 6
 514:	0d c0       	rjmp	.+26     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 516:	23 2d       	mov	r18, r3
 518:	2e 7f       	andi	r18, 0xFE	; 254
 51a:	a2 2e       	mov	r10, r18
 51c:	89 14       	cp	r8, r9
 51e:	58 f4       	brcc	.+22     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 520:	34 fe       	sbrs	r3, 4
 522:	0b c0       	rjmp	.+22     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 524:	32 fc       	sbrc	r3, 2
 526:	09 c0       	rjmp	.+18     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 528:	83 2d       	mov	r24, r3
 52a:	8e 7e       	andi	r24, 0xEE	; 238
 52c:	a8 2e       	mov	r10, r24
 52e:	05 c0       	rjmp	.+10     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 530:	b8 2c       	mov	r11, r8
 532:	a3 2c       	mov	r10, r3
 534:	03 c0       	rjmp	.+6      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 536:	b8 2c       	mov	r11, r8
 538:	01 c0       	rjmp	.+2      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 53a:	b9 2c       	mov	r11, r9
 53c:	a4 fe       	sbrs	r10, 4
 53e:	0f c0       	rjmp	.+30     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 540:	fe 01       	movw	r30, r28
 542:	e8 0d       	add	r30, r8
 544:	f1 1d       	adc	r31, r1
 546:	80 81       	ld	r24, Z
 548:	80 33       	cpi	r24, 0x30	; 48
 54a:	21 f4       	brne	.+8      	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 54c:	9a 2d       	mov	r25, r10
 54e:	99 7e       	andi	r25, 0xE9	; 233
 550:	a9 2e       	mov	r10, r25
 552:	09 c0       	rjmp	.+18     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 554:	a2 fe       	sbrs	r10, 2
 556:	06 c0       	rjmp	.+12     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 558:	b3 94       	inc	r11
 55a:	b3 94       	inc	r11
 55c:	04 c0       	rjmp	.+8      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 55e:	8a 2d       	mov	r24, r10
 560:	86 78       	andi	r24, 0x86	; 134
 562:	09 f0       	breq	.+2      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 564:	b3 94       	inc	r11
 566:	a3 fc       	sbrc	r10, 3
 568:	10 c0       	rjmp	.+32     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 56a:	a0 fe       	sbrs	r10, 0
 56c:	06 c0       	rjmp	.+12     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 56e:	b2 14       	cp	r11, r2
 570:	80 f4       	brcc	.+32     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 572:	28 0c       	add	r2, r8
 574:	92 2c       	mov	r9, r2
 576:	9b 18       	sub	r9, r11
 578:	0d c0       	rjmp	.+26     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 57a:	b2 14       	cp	r11, r2
 57c:	58 f4       	brcc	.+22     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 57e:	b6 01       	movw	r22, r12
 580:	80 e2       	ldi	r24, 0x20	; 32
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	76 d0       	rcall	.+236    	; 0x672 <fputc>
 586:	b3 94       	inc	r11
 588:	f8 cf       	rjmp	.-16     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 58a:	b2 14       	cp	r11, r2
 58c:	18 f4       	brcc	.+6      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 58e:	2b 18       	sub	r2, r11
 590:	02 c0       	rjmp	.+4      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 592:	98 2c       	mov	r9, r8
 594:	21 2c       	mov	r2, r1
 596:	a4 fe       	sbrs	r10, 4
 598:	0f c0       	rjmp	.+30     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 59a:	b6 01       	movw	r22, r12
 59c:	80 e3       	ldi	r24, 0x30	; 48
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	68 d0       	rcall	.+208    	; 0x672 <fputc>
 5a2:	a2 fe       	sbrs	r10, 2
 5a4:	16 c0       	rjmp	.+44     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5a6:	a1 fc       	sbrc	r10, 1
 5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5aa:	88 e7       	ldi	r24, 0x78	; 120
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5b0:	88 e5       	ldi	r24, 0x58	; 88
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	b6 01       	movw	r22, r12
 5b6:	0c c0       	rjmp	.+24     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5b8:	8a 2d       	mov	r24, r10
 5ba:	86 78       	andi	r24, 0x86	; 134
 5bc:	51 f0       	breq	.+20     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5be:	a1 fe       	sbrs	r10, 1
 5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c2:	8b e2       	ldi	r24, 0x2B	; 43
 5c4:	01 c0       	rjmp	.+2      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c6:	80 e2       	ldi	r24, 0x20	; 32
 5c8:	a7 fc       	sbrc	r10, 7
 5ca:	8d e2       	ldi	r24, 0x2D	; 45
 5cc:	b6 01       	movw	r22, r12
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	50 d0       	rcall	.+160    	; 0x672 <fputc>
 5d2:	89 14       	cp	r8, r9
 5d4:	30 f4       	brcc	.+12     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5d6:	b6 01       	movw	r22, r12
 5d8:	80 e3       	ldi	r24, 0x30	; 48
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	4a d0       	rcall	.+148    	; 0x672 <fputc>
 5de:	9a 94       	dec	r9
 5e0:	f8 cf       	rjmp	.-16     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5e2:	8a 94       	dec	r8
 5e4:	f3 01       	movw	r30, r6
 5e6:	e8 0d       	add	r30, r8
 5e8:	f1 1d       	adc	r31, r1
 5ea:	80 81       	ld	r24, Z
 5ec:	b6 01       	movw	r22, r12
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	40 d0       	rcall	.+128    	; 0x672 <fputc>
 5f2:	81 10       	cpse	r8, r1
 5f4:	f6 cf       	rjmp	.-20     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5f6:	22 20       	and	r2, r2
 5f8:	09 f4       	brne	.+2      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5fa:	4e ce       	rjmp	.-868    	; 0x298 <vfprintf+0x4c>
 5fc:	b6 01       	movw	r22, r12
 5fe:	80 e2       	ldi	r24, 0x20	; 32
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	37 d0       	rcall	.+110    	; 0x672 <fputc>
 604:	2a 94       	dec	r2
 606:	f7 cf       	rjmp	.-18     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 608:	f6 01       	movw	r30, r12
 60a:	86 81       	ldd	r24, Z+6	; 0x06
 60c:	97 81       	ldd	r25, Z+7	; 0x07
 60e:	02 c0       	rjmp	.+4      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 610:	8f ef       	ldi	r24, 0xFF	; 255
 612:	9f ef       	ldi	r25, 0xFF	; 255
 614:	2b 96       	adiw	r28, 0x0b	; 11
 616:	0f b6       	in	r0, 0x3f	; 63
 618:	f8 94       	cli
 61a:	de bf       	out	0x3e, r29	; 62
 61c:	0f be       	out	0x3f, r0	; 63
 61e:	cd bf       	out	0x3d, r28	; 61
 620:	df 91       	pop	r29
 622:	cf 91       	pop	r28
 624:	1f 91       	pop	r17
 626:	0f 91       	pop	r16
 628:	ff 90       	pop	r15
 62a:	ef 90       	pop	r14
 62c:	df 90       	pop	r13
 62e:	cf 90       	pop	r12
 630:	bf 90       	pop	r11
 632:	af 90       	pop	r10
 634:	9f 90       	pop	r9
 636:	8f 90       	pop	r8
 638:	7f 90       	pop	r7
 63a:	6f 90       	pop	r6
 63c:	5f 90       	pop	r5
 63e:	4f 90       	pop	r4
 640:	3f 90       	pop	r3
 642:	2f 90       	pop	r2
 644:	08 95       	ret

00000646 <strnlen_P>:
 646:	fc 01       	movw	r30, r24
 648:	05 90       	lpm	r0, Z+
 64a:	61 50       	subi	r22, 0x01	; 1
 64c:	70 40       	sbci	r23, 0x00	; 0
 64e:	01 10       	cpse	r0, r1
 650:	d8 f7       	brcc	.-10     	; 0x648 <strnlen_P+0x2>
 652:	80 95       	com	r24
 654:	90 95       	com	r25
 656:	8e 0f       	add	r24, r30
 658:	9f 1f       	adc	r25, r31
 65a:	08 95       	ret

0000065c <strnlen>:
 65c:	fc 01       	movw	r30, r24
 65e:	61 50       	subi	r22, 0x01	; 1
 660:	70 40       	sbci	r23, 0x00	; 0
 662:	01 90       	ld	r0, Z+
 664:	01 10       	cpse	r0, r1
 666:	d8 f7       	brcc	.-10     	; 0x65e <strnlen+0x2>
 668:	80 95       	com	r24
 66a:	90 95       	com	r25
 66c:	8e 0f       	add	r24, r30
 66e:	9f 1f       	adc	r25, r31
 670:	08 95       	ret

00000672 <fputc>:
 672:	0f 93       	push	r16
 674:	1f 93       	push	r17
 676:	cf 93       	push	r28
 678:	df 93       	push	r29
 67a:	fb 01       	movw	r30, r22
 67c:	23 81       	ldd	r18, Z+3	; 0x03
 67e:	21 fd       	sbrc	r18, 1
 680:	03 c0       	rjmp	.+6      	; 0x688 <fputc+0x16>
 682:	8f ef       	ldi	r24, 0xFF	; 255
 684:	9f ef       	ldi	r25, 0xFF	; 255
 686:	2c c0       	rjmp	.+88     	; 0x6e0 <fputc+0x6e>
 688:	22 ff       	sbrs	r18, 2
 68a:	16 c0       	rjmp	.+44     	; 0x6b8 <fputc+0x46>
 68c:	46 81       	ldd	r20, Z+6	; 0x06
 68e:	57 81       	ldd	r21, Z+7	; 0x07
 690:	24 81       	ldd	r18, Z+4	; 0x04
 692:	35 81       	ldd	r19, Z+5	; 0x05
 694:	42 17       	cp	r20, r18
 696:	53 07       	cpc	r21, r19
 698:	44 f4       	brge	.+16     	; 0x6aa <fputc+0x38>
 69a:	a0 81       	ld	r26, Z
 69c:	b1 81       	ldd	r27, Z+1	; 0x01
 69e:	9d 01       	movw	r18, r26
 6a0:	2f 5f       	subi	r18, 0xFF	; 255
 6a2:	3f 4f       	sbci	r19, 0xFF	; 255
 6a4:	31 83       	std	Z+1, r19	; 0x01
 6a6:	20 83       	st	Z, r18
 6a8:	8c 93       	st	X, r24
 6aa:	26 81       	ldd	r18, Z+6	; 0x06
 6ac:	37 81       	ldd	r19, Z+7	; 0x07
 6ae:	2f 5f       	subi	r18, 0xFF	; 255
 6b0:	3f 4f       	sbci	r19, 0xFF	; 255
 6b2:	37 83       	std	Z+7, r19	; 0x07
 6b4:	26 83       	std	Z+6, r18	; 0x06
 6b6:	14 c0       	rjmp	.+40     	; 0x6e0 <fputc+0x6e>
 6b8:	8b 01       	movw	r16, r22
 6ba:	ec 01       	movw	r28, r24
 6bc:	fb 01       	movw	r30, r22
 6be:	00 84       	ldd	r0, Z+8	; 0x08
 6c0:	f1 85       	ldd	r31, Z+9	; 0x09
 6c2:	e0 2d       	mov	r30, r0
 6c4:	19 95       	eicall
 6c6:	89 2b       	or	r24, r25
 6c8:	e1 f6       	brne	.-72     	; 0x682 <fputc+0x10>
 6ca:	d8 01       	movw	r26, r16
 6cc:	16 96       	adiw	r26, 0x06	; 6
 6ce:	8d 91       	ld	r24, X+
 6d0:	9c 91       	ld	r25, X
 6d2:	17 97       	sbiw	r26, 0x07	; 7
 6d4:	01 96       	adiw	r24, 0x01	; 1
 6d6:	17 96       	adiw	r26, 0x07	; 7
 6d8:	9c 93       	st	X, r25
 6da:	8e 93       	st	-X, r24
 6dc:	16 97       	sbiw	r26, 0x06	; 6
 6de:	ce 01       	movw	r24, r28
 6e0:	df 91       	pop	r29
 6e2:	cf 91       	pop	r28
 6e4:	1f 91       	pop	r17
 6e6:	0f 91       	pop	r16
 6e8:	08 95       	ret

000006ea <__ultoa_invert>:
 6ea:	fa 01       	movw	r30, r20
 6ec:	aa 27       	eor	r26, r26
 6ee:	28 30       	cpi	r18, 0x08	; 8
 6f0:	51 f1       	breq	.+84     	; 0x746 <__ultoa_invert+0x5c>
 6f2:	20 31       	cpi	r18, 0x10	; 16
 6f4:	81 f1       	breq	.+96     	; 0x756 <__ultoa_invert+0x6c>
 6f6:	e8 94       	clt
 6f8:	6f 93       	push	r22
 6fa:	6e 7f       	andi	r22, 0xFE	; 254
 6fc:	6e 5f       	subi	r22, 0xFE	; 254
 6fe:	7f 4f       	sbci	r23, 0xFF	; 255
 700:	8f 4f       	sbci	r24, 0xFF	; 255
 702:	9f 4f       	sbci	r25, 0xFF	; 255
 704:	af 4f       	sbci	r26, 0xFF	; 255
 706:	b1 e0       	ldi	r27, 0x01	; 1
 708:	3e d0       	rcall	.+124    	; 0x786 <__ultoa_invert+0x9c>
 70a:	b4 e0       	ldi	r27, 0x04	; 4
 70c:	3c d0       	rcall	.+120    	; 0x786 <__ultoa_invert+0x9c>
 70e:	67 0f       	add	r22, r23
 710:	78 1f       	adc	r23, r24
 712:	89 1f       	adc	r24, r25
 714:	9a 1f       	adc	r25, r26
 716:	a1 1d       	adc	r26, r1
 718:	68 0f       	add	r22, r24
 71a:	79 1f       	adc	r23, r25
 71c:	8a 1f       	adc	r24, r26
 71e:	91 1d       	adc	r25, r1
 720:	a1 1d       	adc	r26, r1
 722:	6a 0f       	add	r22, r26
 724:	71 1d       	adc	r23, r1
 726:	81 1d       	adc	r24, r1
 728:	91 1d       	adc	r25, r1
 72a:	a1 1d       	adc	r26, r1
 72c:	20 d0       	rcall	.+64     	; 0x76e <__ultoa_invert+0x84>
 72e:	09 f4       	brne	.+2      	; 0x732 <__ultoa_invert+0x48>
 730:	68 94       	set
 732:	3f 91       	pop	r19
 734:	2a e0       	ldi	r18, 0x0A	; 10
 736:	26 9f       	mul	r18, r22
 738:	11 24       	eor	r1, r1
 73a:	30 19       	sub	r19, r0
 73c:	30 5d       	subi	r19, 0xD0	; 208
 73e:	31 93       	st	Z+, r19
 740:	de f6       	brtc	.-74     	; 0x6f8 <__ultoa_invert+0xe>
 742:	cf 01       	movw	r24, r30
 744:	08 95       	ret
 746:	46 2f       	mov	r20, r22
 748:	47 70       	andi	r20, 0x07	; 7
 74a:	40 5d       	subi	r20, 0xD0	; 208
 74c:	41 93       	st	Z+, r20
 74e:	b3 e0       	ldi	r27, 0x03	; 3
 750:	0f d0       	rcall	.+30     	; 0x770 <__ultoa_invert+0x86>
 752:	c9 f7       	brne	.-14     	; 0x746 <__ultoa_invert+0x5c>
 754:	f6 cf       	rjmp	.-20     	; 0x742 <__ultoa_invert+0x58>
 756:	46 2f       	mov	r20, r22
 758:	4f 70       	andi	r20, 0x0F	; 15
 75a:	40 5d       	subi	r20, 0xD0	; 208
 75c:	4a 33       	cpi	r20, 0x3A	; 58
 75e:	18 f0       	brcs	.+6      	; 0x766 <__ultoa_invert+0x7c>
 760:	49 5d       	subi	r20, 0xD9	; 217
 762:	31 fd       	sbrc	r19, 1
 764:	40 52       	subi	r20, 0x20	; 32
 766:	41 93       	st	Z+, r20
 768:	02 d0       	rcall	.+4      	; 0x76e <__ultoa_invert+0x84>
 76a:	a9 f7       	brne	.-22     	; 0x756 <__ultoa_invert+0x6c>
 76c:	ea cf       	rjmp	.-44     	; 0x742 <__ultoa_invert+0x58>
 76e:	b4 e0       	ldi	r27, 0x04	; 4
 770:	a6 95       	lsr	r26
 772:	97 95       	ror	r25
 774:	87 95       	ror	r24
 776:	77 95       	ror	r23
 778:	67 95       	ror	r22
 77a:	ba 95       	dec	r27
 77c:	c9 f7       	brne	.-14     	; 0x770 <__ultoa_invert+0x86>
 77e:	00 97       	sbiw	r24, 0x00	; 0
 780:	61 05       	cpc	r22, r1
 782:	71 05       	cpc	r23, r1
 784:	08 95       	ret
 786:	9b 01       	movw	r18, r22
 788:	ac 01       	movw	r20, r24
 78a:	0a 2e       	mov	r0, r26
 78c:	06 94       	lsr	r0
 78e:	57 95       	ror	r21
 790:	47 95       	ror	r20
 792:	37 95       	ror	r19
 794:	27 95       	ror	r18
 796:	ba 95       	dec	r27
 798:	c9 f7       	brne	.-14     	; 0x78c <__ultoa_invert+0xa2>
 79a:	62 0f       	add	r22, r18
 79c:	73 1f       	adc	r23, r19
 79e:	84 1f       	adc	r24, r20
 7a0:	95 1f       	adc	r25, r21
 7a2:	a0 1d       	adc	r26, r0
 7a4:	08 95       	ret

000007a6 <_exit>:
 7a6:	f8 94       	cli

000007a8 <__stop_program>:
 7a8:	ff cf       	rjmp	.-2      	; 0x7a8 <__stop_program>
